@page "/projects/{projectId:int}/tickets"

@inject ITicketScreenUseCases TicketScreenUseCases

<h3>Tickets</h3>
<br />

<div class="row">
    <div class="col-auto">
        @*<input type="text" class="form-control" @bind-value="searchFilter" @bind-value:event="oninput" /> *@
        <input type="text" class="form-control" @bind-value="searchFilter" />
    </div>
    <div class="col-auto">
        <button class="btn btn-light" @onclick="OnSearch">Search</button>
    </div>
</div>
<br />

Project ID: @ProjectId

@if (tickets != null)
{
    <table class="table">
        <thead>
            <tr>
                <td>Title</td>
                <td>Owner</td>
                <td>Report Date</td>
                <td>Due Date</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var ticket in tickets)
            {
                <TicketRowComponent Ticket=ticket />
            }
        </tbody>
    </table>
}

@code {

    IEnumerable<Ticket> tickets { get; set; }

    string searchFilter;

    [Parameter]
    public int ProjectId { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        tickets = await TicketScreenUseCases.ViewTickets(ProjectId);
    }

    private async Task OnSearch()
    {
        tickets = await TicketScreenUseCases.SearchTickets(searchFilter);
    }
}
