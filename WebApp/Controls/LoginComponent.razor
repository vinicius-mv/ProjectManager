@using WebApp.ViewModels

@inject IAuthenticationUseCases AuthenticationUseCases
@inject NavigationManager NavigationManager

<AlertComponent @ref="alertComponent"></AlertComponent>

<h3>Login</h3>

@if (userViewModel != null)
{
    <EditForm Model="userViewModel" OnValidSubmit="Login" class="form-inline">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">User Name</label>
            <InputText id="name" @bind-Value="userViewModel.UserName" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="password">Password</label>
            <InputText id="password" @bind-Value="userViewModel.Password" class="form-control" type="password"></InputText>
        </div>

        <button type="submit" class="btn btn-btn-outline-primary">Login</button>
    </EditForm>
}

@code {

    private UserViewModel userViewModel;

    private AlertComponent alertComponent;

    private string token;

    protected override void OnInitialized()
    {
        userViewModel = new UserViewModel();
    }

    private async Task Login()
    {
        token = await AuthenticationUseCases.LoginAsync(userViewModel.UserName, userViewModel.Password);
        if (string.IsNullOrWhiteSpace(token))
        {
            alertComponent.ErrorMessage = "Login failled.";
            alertComponent.Show();
        }
        else
        {
            NavigationManager.NavigateTo("/");
        }
    }
}
