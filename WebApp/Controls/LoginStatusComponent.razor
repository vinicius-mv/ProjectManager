@inject IAuthenticationUseCases AuthenticationUseCases
@inject NavigationManager NavigationManager

@if (userName != null)
{
    <text>Welcome @userName</text>
    <button type="button" @onclick="LogoutAsync" class="btn btn-dark">Log out</button>
}

@code {
    [CascadingParameter]
    public  Task<AuthenticationState> AuthenticationState { get; set; }

    string userName;

    protected override async Task OnInitializedAsync()
    {
        var state = await AuthenticationState;
        userName = state.User.Identity.Name;
    }

    async Task LogoutAsync()
    {
        await AuthenticationUseCases.LogoutAsync();
        NavigationManager.NavigateTo("/", true);
    }
}
